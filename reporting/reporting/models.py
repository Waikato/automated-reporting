from __future__ import unicode_literals

from django.db import models

class GradeResults(models.Model):
    """
    Grade results.
    """
    year = models.IntegerField(db_index=True)
    student_id = models.CharField(max_length=250, db_index=True)
    name = models.CharField(max_length=250, db_index=False)
    title = models.CharField(max_length=250, db_index=False)
    prefered_given_name = models.CharField(max_length=250, db_index=False)
    given_name = models.CharField(max_length=250, db_index=True)
    other_given_names = models.CharField(max_length=250, db_index=False)
    family_name = models.CharField(max_length=250, db_index=True)
    previous_name = models.CharField(max_length=250, db_index=False)
    address1 = models.CharField(max_length=250, db_index=False)
    address2 = models.CharField(max_length=250, db_index=False)
    address2a = models.CharField(max_length=250, db_index=False)
    address2b = models.CharField(max_length=250, db_index=False)
    address3 = models.CharField(max_length=250, db_index=False)
    address4 = models.CharField(max_length=250, db_index=False)
    postcode = models.CharField(max_length=250, db_index=False)
    telephone = models.CharField(max_length=250, db_index=False)
    cellphone = models.CharField(max_length=250, db_index=False)
    email = models.CharField(max_length=250, db_index=True)
    hasdisability = models.IntegerField(db_index=False)
    isdomestic = models.IntegerField(db_index=True)
    is_domiciled_locally = models.IntegerField(db_index=False)
    citizenship = models.CharField(max_length=250, db_index=False)
    residency_status = models.CharField(max_length=250, db_index=False)
    origin = models.CharField(max_length=250, db_index=False)
    gender = models.CharField(max_length=250, db_index=False)
    ethnicity = models.CharField(max_length=250, db_index=False)
    ethnic_group = models.CharField(max_length=250, db_index=False)
    all_ethnicities_string = models.CharField(max_length=250, db_index=False)
    all_iwi_string = models.CharField(max_length=250, db_index=False)
    dateofbirth = models.DateField(db_index=False)
    dateofdeath = models.CharField(max_length=250, db_index=False)
    waikato_1st = models.IntegerField(db_index=False)
    nz_1st = models.IntegerField(db_index=False)
    last_year_sec = models.IntegerField(db_index=False)
    sec_qual_year = models.IntegerField(db_index=False)
    last_sec_school = models.CharField(max_length=250, db_index=False)
    last_sec_school_region = models.CharField(max_length=250, db_index=False)
    highest_sec_qual = models.CharField(max_length=250, db_index=False)
    main_activity = models.CharField(max_length=250, db_index=False)
    award_title = models.CharField(max_length=250, db_index=False)
    prog_abbr = models.CharField(max_length=250, db_index=False)
    programme = models.CharField(max_length=250, db_index=False)
    programme_type_code = models.CharField(max_length=250, db_index=True)
    programme_type = models.CharField(max_length=250, db_index=False)
    ishigherdegree = models.IntegerField(db_index=False)
    school_of_study = models.CharField(max_length=250, db_index=False)
    school_of_study_clevel = models.CharField(max_length=250, db_index=True)
    paper_master_code = models.CharField(max_length=250, db_index=True)
    paper_occurrence = models.CharField(max_length=250, db_index=False)
    paper_title = models.CharField(max_length=250, db_index=False)
    occurrence_startdate = models.DateField(db_index=True)
    occurrence_startyear = models.IntegerField(db_index=True)
    occurrence_startweek = models.IntegerField(db_index=True)
    occurrence_enddate = models.DateField(db_index=True)
    stage = models.IntegerField(db_index=False)
    credits = models.FloatField(db_index=True)
    student_credit_points = models.FloatField(db_index=False)
    iscancelled = models.IntegerField(db_index=True)
    isoncampus = models.IntegerField(db_index=False)
    issemesteracourse = models.IntegerField(db_index=False)
    issemesterbcourse = models.IntegerField(db_index=False)
    iswholeyearcourse = models.IntegerField(db_index=False)
    location_code = models.CharField(max_length=250, db_index=False)
    location = models.CharField(max_length=250, db_index=False)
    owning_school_clevel = models.CharField(max_length=250, db_index=True)
    owning_school = models.CharField(max_length=250, db_index=False)
    owning_department_clevel = models.CharField(max_length=250, db_index=True)
    owning_department = models.CharField(max_length=250, db_index=False)
    owning_level4_clevel = models.CharField(max_length=250, db_index=False)
    owning_level4_department = models.CharField(max_length=250, db_index=False)
    owning_level4or3_department = models.CharField(max_length=250, db_index=False)
    owning_level4or3_clevel = models.CharField(max_length=250, db_index=False)
    delivery_mode_code = models.CharField(max_length=250, db_index=False)
    delivery_mode = models.CharField(max_length=250, db_index=False)
    semester_code = models.CharField(max_length=250, db_index=False)
    semester_description = models.CharField(max_length=250, db_index=False)
    isselfpaced = models.IntegerField(db_index=False)
    source_of_funding = models.CharField(max_length=250, db_index=False)
    funding_category_code = models.CharField(max_length=250, db_index=False)
    funding_category = models.CharField(max_length=250, db_index=False)
    cost_category_code = models.CharField(max_length=250, db_index=False)
    cost_category = models.CharField(max_length=250, db_index=False)
    research_supplement_code = models.IntegerField(db_index=False)
    research_supplement = models.CharField(max_length=250, db_index=False)
    classification_code = models.FloatField(db_index=False)
    classification = models.CharField(max_length=250, db_index=False)
    division = models.CharField(max_length=250, db_index=False)
    division_code = models.CharField(max_length=250, db_index=False)
    specified_programme = models.CharField(max_length=250, db_index=False)
    major = models.CharField(max_length=250, db_index=False)
    second_major = models.CharField(max_length=250, db_index=False)
    major2 = models.CharField(max_length=250, db_index=False)
    second_major2 = models.CharField(max_length=250, db_index=False)
    main_subject = models.CharField(max_length=250, db_index=False)
    second_subject = models.CharField(max_length=250, db_index=False)
    supporting_subject = models.CharField(max_length=250, db_index=False)
    teaching_1 = models.CharField(max_length=250, db_index=False)
    teaching_2 = models.CharField(max_length=250, db_index=False)
    teaching_3 = models.CharField(max_length=250, db_index=False)
    teaching_4 = models.CharField(max_length=250, db_index=False)
    subject = models.CharField(max_length=250, db_index=False)
    field = models.CharField(max_length=250, db_index=False)
    specialisation = models.CharField(max_length=250, db_index=False)
    stream = models.CharField(max_length=250, db_index=False)
    endorsement = models.CharField(max_length=250, db_index=False)
    award_year = models.IntegerField(db_index=False)
    award_completion_status = models.CharField(max_length=250, db_index=False)
    award_completion_date = models.DateField(db_index=False)
    award_completion_confirmed_date = models.DateField(db_index=False)
    admission_year = models.IntegerField(db_index=True)
    admission_reason = models.CharField(max_length=250, db_index=False)
    admission_criteria = models.CharField(max_length=250, db_index=False)
    admission_status = models.CharField(max_length=250, db_index=False)
    grade = models.CharField(max_length=250, db_index=False)
    grade_status = models.CharField(max_length=250, db_index=False)
    result_status_code = models.CharField(max_length=250, db_index=False)
    result_status = models.CharField(max_length=250, db_index=False)
    grade_ranking = models.IntegerField(db_index=False)
    mark = models.FloatField(db_index=False)
    moe_completion_code = models.IntegerField(db_index=False)
    iscontinuinggrade = models.IntegerField(db_index=False)
    ispassgrade = models.IntegerField(db_index=False)
    query_date = models.DateField(db_index=False)
    enr_year = models.IntegerField(db_index=True)
    enrolment_status = models.CharField(max_length=250, db_index=True)
    final_grade = models.CharField(max_length=250, db_index=False)
    final_grade_ranking = models.IntegerField(db_index=False)
    final_grade_status = models.CharField(max_length=250, db_index=False)
    final_grade_result_status = models.CharField(max_length=250, db_index=False)
    papers_per_student = models.IntegerField(db_index=False)
    credits_per_student = models.FloatField(db_index=False)
    gpa = models.FloatField(db_index=False)
    ones = models.IntegerField(db_index=False)
    allgradeones = models.IntegerField(db_index=False)
    passgradeones = models.IntegerField(db_index=False)
    retentionones = models.IntegerField(db_index=False)
    award_completion_year = models.IntegerField(db_index=True)
    personoid = models.FloatField(db_index=False)
    courseoccurrenceoid = models.FloatField(db_index=False)
    awardenrolmentoid = models.FloatField(db_index=False)
    enrolmentorcosuoid = models.FloatField(db_index=False)
    isformalprogramme = models.IntegerField(db_index=False)
    citizenship_simple = models.CharField(max_length=250, db_index=False)
    moe_pbrf_code = models.CharField(max_length=250, db_index=False)
    moe_pbrf = models.CharField(max_length=250, db_index=False)
    achievement_date = models.DateField(db_index=False)
    te_reo = models.IntegerField(db_index=False)
